parameters:
- name: sw360projectID
  default: ''

- name: sw360projectName 
  default: ''

- name: projecttype
  default: ''

- name: projecttype2
  default: ''

- name: IdentifierBomFilePath
  default: ''

- name: CAtoolversion
  default: ''

- name: Appsettingsfilepath
  default: ''

- name: fossologyurl
  default: ''
  
- name: sw360url
  default: ''

- name: sw360token
  default: ''

- name: sW360AuthTokenType
  default: ''

- name: Artifactorytoken
  default: ''

- name: ArtifactoryUploadUser
  default: ''

- name: JfrogApi
  default: ''

- name: ProjectID
  default: ''

- name: packageFilePath
  default: ''

- name: packageFilePath2
  default: ''

- name: BomFolderPath
  default: ''

- name: bomFilePath
  default: ''

- name: Release
  default: 'false'

- name: Timeout
  default: '300'

- name: PackageCreatorEnabled
  type: boolean
  default: true

- name: ArtifactoryUploaderEnabled
  type: boolean
  default: true

steps:
  ##### CA Tool install #####

  - task: PowerShell@2
    displayName: CA Tool Install ${{ parameters.CAtoolversion }}
    inputs:
      targetType: 'inline'
      script: | 
        $Value = "${{ parameters.CAtoolversion }}"
        if (!($Value )) {   
          Write-Host $Value
          Write-Host "Installing latest CATool.." 
          nuget install continuous-clearing -x 
        }
        else {
          Write-Host "Installing latest CATool with version ${{ parameters.CAtoolversion }}" 
          nuget install continuous-clearing -Version ${{ parameters.CAtoolversion }}
        }

  ##### PacakgeIdentifier #####
  - task: PowerShell@2
    displayName: PacakgeIdentifier for ${{ parameters.projecttype }}
    inputs:
      targetType: 'inline'
      script: |         
          $appsettings = "${{ parameters.Appsettingsfilepath }}"
          if (!($appsettings)) {
            Write-Host "Package Identifier without appsettings.json"
            $appsettings = "$(Build.SourcesDirectory)\templates\sample-default-app-settings.json"
            ECHO $appsettings
          }
          $(Build.SourcesDirectory)\continuous-clearing.${{ parameters.CAtoolversion }}\tools\PackageIdentifier.exe --PackageFilePath "${{ parameters.packageFilePath }}" --BomFolderPath "${{ parameters.BomFolderPath }}" --projecttype "${{ parameters.projecttype }}" --sW360ProjectName "{{ parameters.sw360projectName }}" --sW360ProjectID  "${{ parameters.sw360projectID }}" --sW360AuthTokenType "${{ parameters.sW360AuthTokenType }}" --sW360URL "${{ parameters.sw360url }}" --sw360Token "${{ parameters.sw360token }}" --fossologyurl "${{ parameters.fossologyurl }}" --JFrogApi "${{ parameters.JFrogApi }}" --ArtifactoryUploadApiKey "${{ parameters.Artifactorytoken }}" --settingsfilepath "$appsettings" --timeOut "${{ parameters.Timeout }}"

  ##### PacakgeIdentifier For Multiple package type #####
  - task: PowerShell@2
    condition: ne('${{ parameters.IdentifierBomFilePath }}', '')
    displayName: PacakgeIdentifier for multiple-project ${{ parameters.projecttype2 }}
    inputs:
      targetType: 'inline'
      script: |         
          $appsettings = "${{ parameters.Appsettingsfilepath }}"
          if (!($appsettings)) {
            Write-Host "Package Identifier running with Default_appSettings.json"
            $appsettings = "$(Build.SourcesDirectory)\templates\sample-default-app-settings.json"
          }
          $(Build.SourcesDirectory)\continuous-clearing.${{ parameters.CAtoolversion }}\tools\PackageIdentifier.exe --PackageFilePath "${{ parameters.packageFilePath2 }}" --identifierBomFilePath "${{ parameters.IdentifierBomFilePath }}" --BomFolderPath "${{ parameters.BomFolderPath }}" --projecttype "${{ parameters.projecttype2 }}" --sW360ProjectName "${{ parameters.sw360projectName }}" --sW360ProjectID  "${{ parameters.sw360projectID }}" --sW360AuthTokenType "${{ parameters.sW360AuthTokenType }}" --sW360URL "${{ parameters.sw360url }}" --fossologyurl "${{ parameters.fossologyurl }}" --sw360Token "${{ parameters.sw360token }}" --JFrogApi "${{ parameters.JFrogApi }}" --ArtifactoryUploadApiKey "${{ parameters.Artifactorytoken }}" --settingsfilepath "$appsettings" --timeOut "${{ parameters.Timeout }}"          

 #####  PacakgeCreator #####
  - task: PowerShell@2
    condition: eq('${{ parameters.PackageCreatorEnabled }}', true)
    continueOnError: true
    displayName: PacakgeCreator
    inputs:
      targetType: 'inline'
      script: |         
          $appsettings = "${{ parameters.Appsettingsfilepath }}"
          if (!($appsettings)) {
            Write-Host "Package Identifier running with Default_appSettings.json"
            $appsettings = "$(Build.SourcesDirectory)\templates\sample-default-app-settings.json"
            ECHO $appsettings
          }
          $(Build.SourcesDirectory)\continuous-clearing.${{ parameters.CAtoolversion }}\tools\SW360PackageCreator.exe --bomFilePath "${{ parameters.bomFilePath }}" --sW360ProjectName "${{ parameters.sw360projectName }}" --projecttype "${{ parameters.projecttype }}" --sW360ProjectID  "${{ parameters.sw360projectID }}" --sW360AuthTokenType "${{ parameters.sW360AuthTokenType }}" --sW360URL "${{ parameters.sw360url }}" --sw360Token "${{ parameters.sw360token }}" --fossologyurl "${{ parameters.fossologyurl }}" --settingsfilepath "$appsettings" --timeOut "${{ parameters.Timeout }}"

 ##### ArtifactoryUploader #####
  - task: PowerShell@2
    condition: eq('${{ parameters.ArtifactoryUploaderEnabled }}', true)
    continueOnError: true
    displayName: ArtifactoryUploader
    inputs:
      targetType: 'inline'
      script: |         
          $appsettings = "${{ parameters.Appsettingsfilepath }}"
          if (!($appsettings)) {
            Write-Host "Package Identifier running with Default_appSettings.json"
            $appsettings = "$(Build.SourcesDirectory)\templates\sample-default-app-settings.json"
            ECHO $appsettings
          }
          $(Build.SourcesDirectory)\continuous-clearing.${{ parameters.CAtoolversion }}\tools\ArtifactoryUploader.exe --bomFilePath "${{ parameters.bomFilePath }}" --sW360ProjectName "${{ parameters.sw360projectName }}" --projecttype "${{ parameters.projecttype }}" --sW360ProjectID  "${{ parameters.sw360projectID }}" --sW360AuthTokenType "${{ parameters.sW360AuthTokenType }}" --sW360URL "${{ parameters.sw360url }}" --sw360Token "${{ parameters.sw360token }}" --JFrogApi "${{ parameters.JFrogApi }}" --ArtifactoryUploadApiKey "${{ parameters.Artifactorytoken }}" --release "${{ parameters.Release }}" --settingsfilepath "$appsettings" --timeOut "${{ parameters.Timeout }}"