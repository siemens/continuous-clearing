{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CA Tool Configuration Schema",
  "description": "Configuration schema for the CA Tool application settings",
  "version": "1.0.0",
  "type": "object",
  "required": ["ProjectType", "Directory"],
  "properties": {
    "TimeOut": {
      "type": "integer",
      "description": "Timeout value in seconds",
      "minimum": 0
    },
    "ProjectType": {
      "type": "string",
      "description": "Type of the project"
    },
    "MultipleProjectType": {
      "type": "boolean",
      "description": "Flag to indicate if multiple project types are supported"
    },
    "Telemetry": {
      "type": "object",
      "properties": {
        "Enable": {
          "type": "boolean"
        },
        "ApplicationInsightInstrumentKey": {
          "type": "string"
        }
      },
      "required": ["Enable"],
      "allOf": [
        {
          "if": {
            "properties": {
              "Enable": { "const": true }
            }
          },
          "then": {
            "required": ["ApplicationInsightInstrumentKey"],
            "properties": {
              "ApplicationInsightInstrumentKey": {
                "minLength": 1,
                "description": "Required when Telemetry is enabled"
              }
            }
          },
          "else": {
            "properties": {
              "ApplicationInsightInstrumentKey": {
                "type": "string",
                "description": "Not required when Telemetry is disabled"
              }
            }
          }
        }
      ]
    },
    "SW360": {
      "type": "object",
      "required": ["URL", "ProjectName", "Fossology"],
      "properties": {
        "URL": {
          "type": "string",
          "pattern": "^(https?:\\/\\/.*|<Insert SW360URL>)$",
          "description": "SW360 URL or placeholder"
        },
        "ProjectName": {
          "type": "string"
        },
        "ProjectID": {
          "type": "string"
        },
        "AuthTokenType": {
          "type": "string"
        },
        "Token": {
          "type": "string"
        },
        "Fossology": {
          "type": "object",
          "properties": {
            "URL": {
              "type": "string",
              "pattern": "^(https?:\\/\\/.*|<Insert FossologyURL>)$",
              "description": "Fossology URL or placeholder"
            },
            "EnableTrigger": {
              "type": "boolean"
            }
          },
          "required": ["EnableTrigger"],
          "allOf": [
            {
              "if": {
                "properties": {
                  "EnableTrigger": { "const": true }
                }
              },
              "then": {
                "required": ["URL"],
                "properties": {
                  "URL": {
                    "minLength": 1,
                    "description": "Required when Fossology trigger is enabled"
                  }
                }
              },
              "else": {
                "properties": {
                  "URL": {
                    "type": "string",
                    "description": "Not required when Fossology trigger is disabled"
                  }
                }
              }
            }
          ]
        },
        "IgnoreDevDependency": {
          "type": "boolean"
        },
        "ExcludeComponents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Directory": {
      "type": "object",
      "required": ["InputFolder", "OutputFolder"],
      "properties": {
        "InputFolder": {
          "type": "string",
          "description": "Input File path. For Docker run set as /mnt/Input"
        },
        "OutputFolder": {
          "type": "string",
          "description": "Output Bom Folder path. For Docker run set as /mnt/Output"
        }
      }
    },
    "Jfrog": {
      "type": "object",
      "required": ["URL"],
      "properties": {
        "URL": {
          "type": "string",
          "pattern": "^(https?:\\/\\/.*|<Insert JFrogURL>)$",
          "description": "JFrog URL or placeholder"
        },
        "Token": {
          "type": "string"
        },
        "DryRun": {
          "type": "boolean"
        }
      }
    }
  },
  "definitions": {
    "packageManagerConfig": {
      "type": "object",
      "required": ["Include", "Artifactory", "ReleaseRepo", "DevDepRepo"],
      "properties": {
        "Include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Artifactory": {
          "type": "object",
          "required": ["ThirdPartyRepos", "InternalRepos", "DevRepos", "RemoteRepos"],
          "properties": {
            "ThirdPartyRepos": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["Name", "Upload"],
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Upload": {
                    "type": "boolean"
                  }
                }
              }
            },
            "InternalRepos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "DevRepos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "RemoteRepos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "ReleaseRepo": {
          "type": "string"
        },
        "DevDepRepo": {
          "type": "string"
        }
      }
    },
    "alpinePackageManagerConfig": {
      "type": "object",
      "properties": {
        "Include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Artifactory": {
          "type": "object",
          "required": ["ThirdPartyRepos", "InternalRepos", "DevRepos", "RemoteRepos"],
          "properties": {
            "ThirdPartyRepos": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["Name", "Upload"],
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Upload": {
                    "type": "boolean"
                  }
                }
              }
            },
            "InternalRepos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "DevRepos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "RemoteRepos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "ReleaseRepo": {
          "type": "string"
        },
        "DevDepRepo": {
          "type": "string"
        }
      }
    }
  },
  "allOf": [
    {
      "properties": {
        "Npm": { "$ref": "#/definitions/packageManagerConfig" },
        "Nuget": { "$ref": "#/definitions/packageManagerConfig" },
        "Maven": { "$ref": "#/definitions/packageManagerConfig" },
        "Debian": { "$ref": "#/definitions/packageManagerConfig" },
        "Alpine": { "$ref": "#/definitions/alpinePackageManagerConfig" },
        "Poetry": { "$ref": "#/definitions/packageManagerConfig" },
        "Conan": { "$ref": "#/definitions/packageManagerConfig" }
      }
    }
  ]
}
