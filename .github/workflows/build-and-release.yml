name: Build & Release

on:
  workflow_run:
    workflows: ["PR Checks"]
    types:
      - completed
  push:
    branches:
      - main

jobs:

  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Version      
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.12.0'
      - name: Restore Packages
        run: dotnet restore src\LicenseClearingTool.sln
      - name: Build
        run: dotnet build src\LicenseClearingTool.sln
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: buildoutput
          path: ${{ github.workspace }}/out/net8.0

  build-docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Build Output
        uses: actions/download-artifact@v4
        with:
            name: buildoutput
            path: ${{ github.workspace }}/out/net8.0
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag ${{ github.repository }}:continuous-clearing-v8.0.0
          docker save ${{ github.repository }}:continuous-clearing-v8.0.0 -o continuous-clearing-v8.0.0.tar
      - name: Upload Docker Image
        uses: actions/upload-artifact@v4
        with:
          name: docker-continuous-clearing
          path: "*.tar"

  release:
    if: github.ref == 'refs/heads/main'    
    runs-on: windows-latest
    needs: [build, build-docker]
  
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Build Output
        uses: actions/download-artifact@v4
        with:
          name: buildoutput
      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: docker-continuous-clearing
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: v8.0.0
          release_name: Release v8.0.0
          body: |
            ${{ github.event.head_commit.message }}
          draft: true
          prerelease: false   
      - name: Upload Docker Image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./continuous-clearing-v8.0.0.tar
          asset_name: continuous-clearing-v8.0.0.tar
          asset_content_type: application/zip
